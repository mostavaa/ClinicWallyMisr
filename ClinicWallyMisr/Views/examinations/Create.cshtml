@model ClinicWallyMisr.examination

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>examination</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.redness, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.redness)
                    @Html.ValidationMessageFor(model => model.redness, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.swelling, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.swelling)
                    @Html.ValidationMessageFor(model => model.swelling, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.scars, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.scars)
                    @Html.ValidationMessageFor(model => model.scars, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LTWastingofQuadriceps, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.LTWastingofQuadriceps)
                    @Html.ValidationMessageFor(model => model.LTWastingofQuadriceps, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RTWastingofQuadriceps, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.RTWastingofQuadriceps)
                    @Html.ValidationMessageFor(model => model.RTWastingofQuadriceps, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LTWastingofQuadricepsCompare, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LTWastingofQuadricepsCompare, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LTWastingofQuadricepsCompare, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RTWastingofQuadricepsCompare, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RTWastingofQuadricepsCompare, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RTWastingofQuadricepsCompare, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LTWastingofScapula, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.LTWastingofScapula)
                    @Html.ValidationMessageFor(model => model.LTWastingofScapula, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RTWastingofScapula, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.RTWastingofScapula)
                    @Html.ValidationMessageFor(model => model.RTWastingofScapula, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LTLognThoracicNerveInjury, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.LTLognThoracicNerveInjury)
                    @Html.ValidationMessageFor(model => model.LTLognThoracicNerveInjury, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RTLognThoracicNerveInjury1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.RTLognThoracicNerveInjury1)
                    @Html.ValidationMessageFor(model => model.RTLognThoracicNerveInjury1, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Effusion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Effusion)
                    @Html.ValidationMessageFor(model => model.Effusion, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EffusionType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EffusionType, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EffusionType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NearByJoints, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.NearByJoints)
                    @Html.ValidationMessageFor(model => model.NearByJoints, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NearByJointsType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NearByJointsType, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NearByJointsType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GaitPattern, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.GaitPattern)
                    @Html.ValidationMessageFor(model => model.GaitPattern, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GaitPatternType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GaitPatternType, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GaitPatternType, "", new { @class = "text-danger" })
            </div>
        </div>

        <input type="hidden" value="@ViewBag.visit.id" id="visitId" name="visitId" />

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @{
        Guid myId = ViewBag.visit.id;
    }
    @Html.ActionLink("Back to List", "Index", new { id = myId })
</div>
